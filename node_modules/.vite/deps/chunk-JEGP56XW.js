import {
  add_locations,
  check_target,
  each,
  element,
  index,
  init,
  legacy_api,
  legacy_rest_props,
  prop,
  set_attributes,
  slot,
  validate_dynamic_element_tag
} from "./chunk-SYLBTIPA.js";
import {
  FILENAME,
  NAMESPACE_SVG,
  append,
  child,
  comment,
  first_child,
  get,
  mark_module_end,
  mark_module_start,
  ns_template,
  pop,
  push,
  reset,
  sibling,
  strict_equals,
  template_effect
} from "./chunk-SHJIOSPR.js";

// node_modules/.pnpm/lucide-svelte@0.471.0_svelte@5.19.0/node_modules/lucide-svelte/dist/defaultAttributes.js
var defaultAttributes = {
  xmlns: "http://www.w3.org/2000/svg",
  width: 24,
  height: 24,
  viewBox: "0 0 24 24",
  fill: "none",
  stroke: "currentColor",
  "stroke-width": 2,
  "stroke-linecap": "round",
  "stroke-linejoin": "round"
};
var defaultAttributes_default = defaultAttributes;

// node_modules/.pnpm/lucide-svelte@0.471.0_svelte@5.19.0/node_modules/lucide-svelte/dist/Icon.svelte
mark_module_start();
Icon[FILENAME] = "node_modules/.pnpm/lucide-svelte@0.471.0_svelte@5.19.0/node_modules/lucide-svelte/dist/Icon.svelte";
var root = add_locations(ns_template(`<svg><!><!></svg>`), Icon[FILENAME], [[14, 0]]);
function Icon($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  const $$restProps = legacy_rest_props($$sanitized_props, [
    "name",
    "color",
    "size",
    "strokeWidth",
    "absoluteStrokeWidth",
    "iconNode"
  ]);
  push($$props, false, Icon);
  let name = prop($$props, "name", 8, void 0);
  let color = prop($$props, "color", 8, "currentColor");
  let size = prop($$props, "size", 8, 24);
  let strokeWidth = prop($$props, "strokeWidth", 8, 2);
  let absoluteStrokeWidth = prop($$props, "absoluteStrokeWidth", 8, false);
  let iconNode = prop($$props, "iconNode", 24, () => []);
  const mergeClasses = (...classes) => classes.filter((className, index2, array) => {
    return Boolean(className) && strict_equals(array.indexOf(className), index2);
  }).join(" ");
  init();
  var svg = root();
  let attributes;
  var node = child(svg);
  each(node, 1, iconNode, index, ($$anchor2, $$item) => {
    let tag = () => get($$item)[0];
    tag();
    let attrs = () => get($$item)[1];
    attrs();
    var fragment = comment();
    var node_1 = first_child(fragment);
    validate_dynamic_element_tag(tag);
    element(
      node_1,
      tag,
      true,
      ($$element, $$anchor3) => {
        let attributes_1;
        template_effect(() => attributes_1 = set_attributes($$element, attributes_1, { ...attrs() }, void 0, $$element.namespaceURI === NAMESPACE_SVG, $$element.nodeName.includes("-")));
      },
      void 0,
      [35, 4]
    );
    append($$anchor2, fragment);
  });
  var node_2 = sibling(node);
  slot(node_2, $$props, "default", {}, null);
  reset(svg);
  template_effect(() => attributes = set_attributes(
    svg,
    attributes,
    {
      ...defaultAttributes_default,
      ...$$restProps,
      width: size(),
      height: size(),
      stroke: color(),
      "stroke-width": absoluteStrokeWidth() ? Number(strokeWidth()) * 24 / Number(size()) : strokeWidth(),
      class: mergeClasses("lucide-icon", "lucide", name() ? `lucide-${name()}` : "", $$sanitized_props.class)
    },
    void 0,
    true
  ));
  append($$anchor, svg);
  return pop({ ...legacy_api() });
}
mark_module_end(Icon);

export {
  Icon
};
/*! Bundled license information:

lucide-svelte/dist/defaultAttributes.js:
  (**
   * @license lucide-svelte v0.471.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=chunk-JEGP56XW.js.map
