import {
  Icon
} from "./chunk-JEGP56XW.js";
import "./chunk-QFFHCFT4.js";
import "./chunk-PZWNHE3Y.js";
import {
  check_target,
  legacy_api,
  legacy_rest_props,
  slot,
  spread_props,
  wrap_snippet
} from "./chunk-SYLBTIPA.js";
import {
  FILENAME,
  append,
  comment,
  first_child,
  mark_module_end,
  mark_module_start,
  pop,
  push
} from "./chunk-SHJIOSPR.js";
import "./chunk-DEX2RCYB.js";
import "./chunk-QT72MLSQ.js";
import "./chunk-Y4YKKBUU.js";
import "./chunk-M4H726CL.js";

// node_modules/.pnpm/lucide-svelte@0.471.0_svelte@5.19.0/node_modules/lucide-svelte/dist/icons/check.svelte
mark_module_start();
Check[FILENAME] = "node_modules/.pnpm/lucide-svelte@0.471.0_svelte@5.19.0/node_modules/lucide-svelte/dist/icons/check.svelte";
function Check($$anchor, $$props) {
  check_target(new.target);
  const $$sanitized_props = legacy_rest_props($$props, [
    "children",
    "$$slots",
    "$$events",
    "$$legacy"
  ]);
  push($$props, false, Check);
  const iconNode = [["path", { "d": "M20 6 9 17l-5-5" }]];
  Icon($$anchor, spread_props({ name: "check" }, () => $$sanitized_props, {
    iconNode,
    children: wrap_snippet(Check, ($$anchor2, $$slotProps) => {
      var fragment_1 = comment();
      var node = first_child(fragment_1);
      slot(node, $$props, "default", {}, null);
      append($$anchor2, fragment_1);
    }),
    $$slots: { default: true }
  }));
  return pop({ ...legacy_api() });
}
mark_module_end(Check);
export {
  Check as default
};
/*! Bundled license information:

lucide-svelte/dist/icons/check.svelte:
  (**
   * @license lucide-svelte v0.471.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)

lucide-svelte/dist/icons/check.js:
  (**
   * @license lucide-svelte v0.471.0 - ISC
   *
   * This source code is licensed under the ISC license.
   * See the LICENSE file in the root directory of this source tree.
   *)
*/
//# sourceMappingURL=lucide-svelte_icons_check.js.map
